const fs = require('fs');
const path = require('path');
const { get } = require('./get.js');

async function getRepos(skipCache = false) {
  const repos = checkRepoCache();
  if (!skipCache && repos) {
    return Promise.resolve(repos);
  }
  return await fetchRepos();
}
function cacheRepos(repos) {
  const filePath = path.join(__dirname, 'repos.json');
  fs.writeFileSync(filePath, JSON.stringify(repos));
}
function checkRepoCache() {
  try {
    const filePath = path.join(__dirname, 'repos.json');
    if (fs.existsSync(filePath)) {
      let needsRefresh = false;
      const oneDay = 60 * 24;
      const { mtime } = fs.statSync(filePath);
      const now = new Date().getTime();
      const diff = now - mtime.getTime();
      const minutes = Math.floor(diff / 1000 / 60);
      if (minutes > oneDay * 7) {
        needsRefresh = true;
        return
      }
      return JSON.parse(fs.readFileSync(filePath).toString());
    }
  } catch (e) {
    console.error(e);
  }
}

async function fetchRepos() {
  const repos = await get('https://api.github.com/orgs/codeworks-templates/repos');
  cacheRepos(repos);
  return repos;
}

exports.getRepos = getRepos;