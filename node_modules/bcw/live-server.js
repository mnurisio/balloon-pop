#!/usr/bin/env node
const http = require("http");

const ws = require("ws");
const chokidar = require("chokidar");
const { colors } = require("./utils/console-utils.js");
const { handlePortFlags, getOpenPort, handleServerRequests, startServer } = require("./lib/server_utils.js");

const ROOT = process.cwd();
let PORT = handlePortFlags();

async function startLiveServer() {
  let count = 0;
  let emoji = "âš¡"
  let WS_PORT = await getOpenPort(PORT + 1);
  let server = http.createServer((req, res) => handleServerRequests(req, res, true, WS_PORT));

  startServer(server, PORT)

  const reloadServer = new ws.WebSocketServer({
    port: WS_PORT,
  });

  server.on("error", (err) => {
    reloadServer.close();
  })

  server.on('close', () => {
    reloadServer.close();
  })


  reloadServer.on("listening", () => {
    console.log(`${colors.FgYellow}[âš¡ Socket Server is running on port: ${WS_PORT}]${colors.Reset}`);
  });

  reloadServer.on("reload", () => {
    process.stdout.moveCursor(0, -1)
    process.stdout.clearScreenDown()
    if (count >= 1) {
      console.log(`${colors.FgYellow}${count}${emoji}- ${new Date().toLocaleTimeString()}${colors.Reset}`);
    }
    if (count > 50) {
      emoji = "âœ¨"
    }
    if (count > 100) {
      emoji = "ðŸŒŸ"
    }
    if (count > 200) {
      emoji = "ðŸ’«"
    }
    if (count > 300) {
      emoji = "ðŸ”¥"
    }
    if (count > 400) {
      emoji = "ðŸš’"
    }
    if (count > 500) {
      emoji = "ðŸš¨"
    }
    if (count > 600) {
      emoji = "ðŸ§¯"
    }
    if (count > 700) {
      emoji = "ðŸ§¨"
    }
    if (count > 800) {
      emoji = "ðŸ’£"
    }
    if (count > 900) {
      emoji = "ðŸ’¥"
    }
    if (count > 1000) {
      emoji = "ðŸª¦"
    }
    count++;
    reloadServer.clients.forEach((client) => {
      client.send("RELOAD");
    });
  });

  chokidar.watch(ROOT + "/**/*.*").on("all", () => {
    reloadServer.emit("reload");
  });

}

startLiveServer()
